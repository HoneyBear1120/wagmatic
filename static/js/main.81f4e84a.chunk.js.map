{"version":3,"sources":["components/Wizzard.js","components/Layout.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["Wizzard","react_default","a","createElement","className","src","alt","web3","Web3","Layout","_useState","useState","_useState2","Object","slicedToArray","setIsCopied","_useState3","_useState4","account","setAccount","_useState5","_useState6","wagmaticContract","setWagmaticContract","_useState7","_useState8","connected","setConnected","_useState9","_useState10","refferrals","setRefferrals","_useState11","_useState12","contractBalance","setContractBalance","_useState13","_useState14","walletBalance","setWalletBalance","_useState15","_useState16","wagsAmount","setWagsAmount","_useState17","_useState18","waggiesAmount","setWaggiesAmount","_useState19","_useState20","dailyReward","setDailyReward","_useState21","_useState22","users","setUsers","onAbsolve","_ref","asyncToGenerator","regenerator_default","mark","_callee","tx1","wrap","_context","prev","next","console","log","invest","sent","wait","stop","apply","this","arguments","loadWeb3","_ref2","_callee2","accounts","abi","provider","signer","contract","_context2","window","ethereum","enable","currentProvider","alert","eth","getAccounts","contract_token","ethers","providers","Web3Provider","getSigner","Contract","getBalance","then","balance","balanceInEth","utils","formatEther","bal","Math","round","toFixed","res","num","Number","_hex","amount","fromWei","toString","getMyRunes","getMyMiners","runeRewards","uniqueUsers","useEffect","onClick","prevState","type","onChange","e","isNaN","target","value","disabled","lib","text","onCopy","setTimeout","style","flex","justifyContent","height","Footer","href","App","eth_account","setTimestamp","setLaunchStatus","LoadingAll","difference","Date","hoursMinSecs","days","floor","hours","minutes","seconds","src_components_Wizzard","src_components_Layout","src_components_Footer","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81f4e84a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Wizzard.css\"\r\n\r\nconst Wizzard = () =>{\r\n    return(\r\n        <div className=\"logo_container\">\r\n            <div className=\"logo\">\r\n                {/* <img src=\"/images/2.png\" alt=\"\" className=\"frame-color\"/> */}\r\n                <img src=\"/images/2.png\" alt=\"\" className=\"text-wizzard\"/>\r\n                {/* <img src=\"/images/wizzard.png\" alt=\"\" className=\"wizzard\"/> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Wizzard","import React, { useState, useEffect } from \"react\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport contract_token from '../abis/wagmatic.json'\r\nimport Web3 from 'web3';\r\nimport './Layout.css';\r\n\r\nvar web3 = new Web3();\r\n\r\nconst stakingAddress    = \"0xC66c7cC87d2c865aCD9B7b47735306694A8B2243\";\r\nconst refAddress        = \"0x0000000000000000000000000000000000000000\";\r\n\r\nconst Layout = () =>{\r\n\r\n    const [isCopied, setIsCopied] = useState(false);\r\n    const [account, setAccount] = useState();\r\n    const [wagmaticContract, setWagmaticContract] = useState(0);\r\n    const [connected, setConnected] = useState(false);\r\n    const [refferrals, setRefferrals] = useState(\"https://wagmatic.io&ref=\")\r\n    const [contractBalance, setContractBalance] = useState(0);\r\n    const [walletBalance, setWalletBalance] = useState(0);\r\n    const [wagsAmount, setWagsAmount] = useState(0);\r\n    const [waggiesAmount, setWaggiesAmount] = useState(0);\r\n    const [dailyReward, setDailyReward] = useState(0);\r\n    const [users, setUsers] = useState(0);\r\n\r\n    function connect(){\r\n        //loadWeb3();\r\n        if (account)\r\n            setConnected(prevState => !prevState)\r\n    }\r\n\r\n    const onAbsolve = async () => {\r\n        console.log(\"absolve\")\r\n        let tx1 = await wagmaticContract.invest(refAddress)\r\n        await tx1.wait();\r\n    }\r\n\r\n    const onCopyText = () => {\r\n        setIsCopied(true);\r\n        setTimeout(() => {\r\n            setIsCopied(false);\r\n        }, 1000);\r\n    }\r\n\r\n    const onHandleChange = e => {\r\n        if(isNaN(e.target.value))\r\n            return;\r\n        let amount = e.target.value;\r\n        console.log(amount);\r\n    }\r\n\r\n    const loadWeb3 = async () =>{\r\n        if (window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum)\r\n            await window.ethereum.enable()\r\n        } else if (window.web3) {\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n        } else {\r\n            window.alert('Non ethereum browser detected. You should consider trying Metamask!')\r\n        }\r\n        \r\n        const accounts = await window.web3.eth.getAccounts()\r\n        const account = accounts[0]\r\n        setAccount(account)    \r\n        setRefferrals(`https://wagmatic.io/?ref=` + account);\r\n\r\n        const abi = contract_token    \r\n\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = provider.getSigner();    \r\n        const contract = new ethers.Contract(stakingAddress, abi, signer)    \r\n        setWagmaticContract(contract)\r\n\r\n        provider.getBalance(account).then((balance) => {\r\n            // convert a currency unit from wei to ether\r\n            const balanceInEth = ethers.utils.formatEther(balance)\r\n            let bal = (Math.round(balanceInEth * 1000) / 1000).toFixed(3)\r\n            setWalletBalance(bal)\r\n        })\r\n\r\n        contract.getBalance()\r\n        .then((res) => {\r\n            const num = Number(res._hex);\r\n            let amount = web3.utils.fromWei(num.toString(), 'ether');\r\n            amount = (Math.round(amount * 1000) / 1000).toFixed(3)\r\n            setContractBalance(amount);\r\n        })\r\n\r\n        contract.getMyRunes(account)\r\n        .then((res) => {\r\n            const num = Number(res._hex);\r\n            let amount = web3.utils.fromWei(num.toString(), 'ether');\r\n            amount = (Math.round(amount * 1000) / 1000).toFixed(3)\r\n            setWagsAmount(amount);\r\n        })\r\n\r\n        contract.getMyMiners()\r\n        .then((res) => {\r\n            const num = Number(res._hex);\r\n            let amount = web3.utils.fromWei(num.toString(), 'ether');\r\n            amount = (Math.round(amount * 1000) / 1000).toFixed(3)\r\n            setWaggiesAmount(amount);\r\n        })\r\n\r\n        contract.runeRewards(account)\r\n        .then((res) => {\r\n            const num = Number(res._hex);\r\n            let amount = web3.utils.fromWei(num.toString(), 'ether');\r\n            amount = (Math.round(amount * 1000) / 1000).toFixed(3)\r\n            setDailyReward(amount);\r\n        })\r\n\r\n        contract.uniqueUsers()\r\n        .then((res) => {\r\n            const num = Number(res._hex);\r\n            let amount = web3.utils.fromWei(num.toString(), 'ether');\r\n            setUsers(amount);\r\n        })\r\n     }\r\n\r\n    useEffect(() => {    \r\n        loadWeb3();        \r\n    },[account]);\r\n\r\n\r\n    return(\r\n        <div className=\"layout_container\">\r\n            <div className=\"layout_parent\">\r\n                { !connected && <div className=\"connect_div border_div\">\r\n                    <div className=\"button-div\"><button onClick={connect}>connect</button></div>\r\n                </div>}\r\n               \r\n                {\r\n                    connected && <div className=\"connect_div border_div\">\r\n                    <div className=\"fee_container\">\r\n                        <div>Contract</div>\r\n                        {/* <div>0,000 <span className=\"span-cro\">MATIC</span></div> */}\r\n                        <div>{contractBalance} <span className=\"span-cro\">MATIC</span></div>\r\n                    </div>\r\n                    <div className=\"fee_container\">\r\n                        <div>Wallet</div>\r\n                        {/* <div>0,000 <span className=\"span-cro\">MATIC</span></div> */}\r\n                        <div>{walletBalance} <span className=\"span-cro\">MATIC</span></div>\r\n                    </div>\r\n                    <div className=\"fee_container\">\r\n                        <div>Daily rewards</div>\r\n                        <div>{dailyReward} <span className=\"span-cro\">MATIC</span></div>\r\n                    </div>\r\n                    <div className=\"fee_container\">\r\n                        <div>Wags</div>\r\n                        <div>{wagsAmount} <span className=\"span-cro\">MATIC</span></div>\r\n                    </div>\r\n                    <div className=\"fee_container\">\r\n                        <div>Waggies</div>\r\n                        <div>{waggiesAmount} <span className=\"span-cro\">MATIC</span></div>\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                        <input type=\"number\" className=\"input-number\" onChange={onHandleChange}/>\r\n                        <div className=\"button-container\">\r\n                            <p className=\"cro-p\">MATIC</p>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"absolve-div\"><button onClick={connect}>absolve</button></div> */}\r\n                    <div className=\"absolve-div\"><button onClick={()=>{onAbsolve()}} disabled>absolve</button></div>\r\n                    <hr className=\"hr\"/>\r\n                   <div className=\"reward-container\"><p className=\"reward\">Rewards</p> \r\n                   <div className=\"amount-cro\">\r\n                    <p className=\"reward-amount\">0,000</p> <span className=\"span-cro\">MATIC</span></div>\r\n                    </div>\r\n                    <div className=\"button_parent\">\r\n                    <div className=\"button-container\">\r\n                            <button className=\"button-absolve\">\r\n                                <p>INFUSE</p> \r\n                                <span> (compound) </span>\r\n                                </button>\r\n                    </div>\r\n                    <div className=\"button-container\">\r\n                        <button className=\"button-absolve\"><p>ENLIGHTEN</p> \r\n                        <span> (claim) </span></button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n                <div className=\"stats_div border_div\">\r\n                    <div>\r\n                        <div className=\"stats-div_1\"><p>8</p><span>%</span></div>\r\n                        <div className=\"daily-return\">daily return</div>\r\n                    </div>\r\n                    <div className=\"apr_container\">\r\n                        <div className=\"apr\">APR</div>\r\n                        <div className=\"number-container\">\r\n                            <div>2,920%</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"fee_container\">\r\n                        <div>Dev Fee</div>\r\n                        <div>3%</div>\r\n                    </div>\r\n                    <div className=\"fee_container\">\r\n                        <div>Market Fee</div>\r\n                        <div>2%</div>\r\n                    </div>\r\n                    <div className=\"fee_container\">\r\n                        <div>Users</div>\r\n                        <div>{users}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"refferral_div border_div\">\r\n                    <h1>REFFERRALS</h1>\r\n                    <div className=\"input-container\">\r\n                        <input type=\"text\" value={refferrals} />\r\n                        <CopyToClipboard text={refferrals} onCopy={onCopyText}>\r\n                        <div className=\"button-container\">\r\n                            <button className=\"button-absolve\" style={{ flex:\"auto\", justifyContent: \"center\", height:\"50px\" }}>\r\n                                COPY\r\n                            </button>\r\n                            {/* <span className={`copy-feedback ${isCopied ? \"active\" : \"\"}`}> */}\r\n                                {/* Copied! */}\r\n                            {/* </span> */}\r\n                        </div>\r\n                        </CopyToClipboard>\r\n                    </div>\r\n                    <p className=\"parrafo\">Earn 12% of the MATIC deposited from anyone who uses your referral link</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Layout","import React from \"react\"\r\nimport \"./Footer.css\"\r\n\r\n\r\nconst Footer = () =>{\r\n    return(\r\n        <div className=\"icon_container\">\r\n\r\n            <div className=\"icon_parent\">\r\n                <a href=\"#\">\r\n                    <img src=\"/images/icon01.png\" className=\"icon-footer\"/>\r\n                </a>\r\n                <a href=\"#\">\r\n                    <img src=\"/images/icon02.png\"  className=\"icon-footer\"/>\r\n                </a>\r\n                <a href=\"#\">\r\n                    <img src=\"/images/icon03.png\" className=\"icon-footer\" />\r\n                </a>\r\n                <a href=\"#\">\r\n                    <img src=\"/images/icon04.png\"  className=\"icon-footer\"/>\r\n                </a>\r\n                <a href=\"#\">\r\n                    <img src=\"/images/icon05.png\"  className=\"icon-footer\"/>\r\n                </a>\r\n            </div>\r\n            <div className=\"developed_by\"><p>Developed by Brad Finance Dev Team</p></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer","import React, {\n  useState,\n  useEffect\n} from 'react';\nimport Web3 from 'web3'\nimport Wizzard from './Wizzard';\nimport Layout from './Layout';\nimport Footer from './Footer';\nimport CountDownTimer from './CountDownTimer';\nimport './App.css';\n\n\nconst App = () => {\n\n  const [eth_account, setAccount] = useState(0)\n  const [timestamp, setTimestamp] = useState({});\n  const [launchStatus, setLaunchStatus] = useState(false);\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    } else {\n      window.alert('Non ethereum browser detected. You should consider trying Metamask!')\n    }\n    const accounts = await window.web3.eth.getAccounts()\n    const account = accounts[0]\n    setAccount(account)    \n  }\n\n  const LoadingAll = async () => {\n    await loadWeb3()\n  }\n\n  useEffect(() => {\n    // let year = new Date().getFullYear();\n    let difference = +new Date('4/25/2022 11:00:00 AM UTC') - +new Date();\n    let hoursMinSecs = {};\n    if (difference > 0) {\n      hoursMinSecs = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60)\n      }\n    } else {\n      hoursMinSecs = {\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0\n      }\n      setLaunchStatus(true);\n    }\n\n    setTimestamp(hoursMinSecs)\n    LoadingAll()\n  }, [eth_account])\n\n  return (\n    <div className=\"App\">\n      <Wizzard />\n      {/* <CountDownTimer /> */}\n      <Layout />\n      <Footer />\n    </div>\n  );\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}